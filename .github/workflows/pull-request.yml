name: Pull-Request

on:
  pull_request:
    types: [assigned, opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      tags:
        description: 'Pull Request Workflow'

env:
  NODE_VERSION_FILE: '.nvmrc'
  PNPM_VERSION: 8

jobs:
  dependency-review:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v3

  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install pnpm and cache
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION}}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: 'pnpm'
      - name: Initialise cache for node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('pnpm-lock.yaml') }}
        id: cache
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

  lint-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Lint Tests
        run: echo "running lint tests..."

  unit-tests:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('pnpm-lock.yaml') }}
      - name: Run tests
        run: |
          echo "running unit tests..."

  pr-labeler:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: TimonVS/pr-labeler-action@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/pr-labeler.yml

  danger-js:
    runs-on: ubuntu-latest
    needs: install
    permissions:
      contents: read
      issues: read
      pull-requests: write
      statuses: write
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION}}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: 'pnpm'
      - name: Restore node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ hashFiles('pnpm-lock.yaml') }}
      - name: Run Danger JS
        run: pnpm danger ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
